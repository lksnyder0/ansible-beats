# Hack to fix execution with tags, list tags that depend on 
- name: Stop and disable {{ item }}
  become: yes
  systemd:
    name: "{{ package_and_service_name[item] }}"
    enabled: false
    state: stopped

- name: Uninstall {{ item }} (Debian)
  apt:
      name: "{{ package_and_service_name[item] }}" # not required. A list of package names, like C(foo), or package specifier with version, like C(foo=1.0). Name wildcards (fnmatch) like C(apt*) and version wildcards like C(foo=1.0*) are also supported.
      purge: yes # not required. Will force purging of configuration files if the module state is set to I(absent).
      state: absent # not required. choices: absent;build-dep;latest;present. Indicates the desired package state. C(latest) ensures that the latest version is installed. C(build-dep) ensures the package build dependencies are installed.
  when: "ansible_os_family == 'Debian'"

- name: Uninstall {{ item }} (Redhat)
  yum:
      name: "{{ package_and_service_name[item] }}" # not required. A package name or package specifier with version, like C(name-1.0).,If a previous version is specified, the task also needs to turn C(allow_downgrade) on. See the C(allow_downgrade) documentation for caveats with downgrading packages.,When using state=latest, this can be C('*') which means run C(yum -y update).,You can also pass a url or a local path to a rpm file (using state=present). To operate on several packages this can accept a comma separated list of packages or (as of 2.0) a list of packages.
      state: absent # not required. choices: absent;installed;latest;present;removed. Whether to install (C(present) or C(installed), C(latest)), or remove (C(absent) or C(removed)) a package.,C(present) and C(installed) will simply ensure that a desired package is installed.,C(latest) will update the specified package if it's not of the latest available version.,C(absent) and C(removed) will remove the specified package.
  when: "ansible_os_family == 'RedHat'"